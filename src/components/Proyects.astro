---
import CardProyect from "./CardProyect.astro"
---

<section
	class="animation animation flex flex-col items-center justify-center overflow-visible px-6"
>
	<h2 class="my-20 mt-20 text-center text-5xl sm:my-28">Proyectos</h2>
	<div
		class="grid max-w-[60rem] grid-cols-1 items-center justify-center gap-10 md:grid-cols-2"
	>
		<CardProyect
			img1="1.webp"
			img2="2.webp"
			img3="3.webp"
			img4="4.webp"
			img5="5.webp"
			img6="6.webp"
			title="AGR Baits"
			parf="Web creada para los compañeros de AGR Baits, una empresa española especializada en el desarrollo de señuelos de pesca, donde actualmente me encuentro ayudando como desarrollador."
			stack1="Astro"
			stack2="React"
			stack3="Tailwind"
			stack4="Turso"
			stack5="Typescript"
			stack6="Vercel"
			stack1c="bg-teal-500/60"
			stack2c="bg-orange-400/60"
			stack3c="bg-blue-400/60"
			stack4c="bg-green-400/60"
			stack5c="bg-blue-300/60"
			stack6c="bg-black"
			speed="500"
		/>
		<CardProyect
			img1="10.webp"
			img2="11.webp"
			img3="12.webp"
			img4="13.webp"
			img5="14.webp"
			title="AcuaNet"
			parf="Aplicación web diseñada para consultar en tiempo real las mediciones hidrográficas de España, incluyendo el estado de embalses, cuencas y pluviómetros."
			stack1="NextJs"
			stack2="React"
			stack3="Tailwind"
			stack4="MySql"
			stack5="Express"
			stack6="Vercel"
			stack1c="bg-blue-800/60"
			stack2c="bg-blue-400/60"
			stack3c="bg-teal-500/60"
			stack4c="bg-orange-400/60"
			stack5c="bg-yellow-300/60"
			stack6c="bg-black"
			speed="800"
		/>
	</div>
</section>
<style>
	.animation {
		opacity: 0;
		gap: 0px;
		transition: opacity 2s;
	}

	.scroll-animation {
		opacity: 1;
		animation: gapi 1s forwards;
	}
</style>

<script>
	function setupAnimations() {
		const elementsToAnimate = document.querySelectorAll(".animation")

		const observer = new IntersectionObserver(
			(entries, observer) => {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						// Agrega la animación cuando el elemento es visible en el viewport
						entry.target.classList.add("scroll-animation")

						// Deja de observar el elemento si ya se ha animado
						observer.unobserve(entry.target)
					}
				})
			},
			{ threshold: 0.3 } // El umbral puede ser ajustado según tu necesidad
		)

		elementsToAnimate.forEach((element) => {
			observer.observe(element)
		})
	}

	document.addEventListener("DOMContentLoaded", setupAnimations)
</script>
